#define trigPin 7
#define echoPin 6
#define led 13
#define led2 12
#define led3 11
#define led4 10
#define led5 9
#define led6 8
#define buzzer 3
#include <Servo.h>
Servo myServo;
unsigned long currentMillis = 0, previousMillis = 0, interval = 15;
int thetaAng = 18, thetaDirection = 2;
const int thetaMin = 16, thetaMax = 168;
int sound = 250;


void setup() {
  Serial.begin (115200);
  pinMode(trigPin, OUTPUT);
  pinMode(echoPin, INPUT);
  pinMode(led, OUTPUT);
  pinMode(led2, OUTPUT);
  pinMode(led3, OUTPUT);
  pinMode(led4, OUTPUT);
  pinMode(led5, OUTPUT);
  pinMode(led6, OUTPUT);
  pinMode(buzzer, OUTPUT);

  myServo.attach(5); // Defines on which pin is the servo motor attached
  previousMillis = currentMillis = millis();
  myServo.write(16);

}

void loop() {

  currentMillis = millis();
  if ( currentMillis - previousMillis >= interval) {
    long duration, distance;
    if (thetaAng <= thetaMin || thetaAng >= thetaMax){
      thetaDirection *= -1;
    }
    thetaAng += thetaDirection;
    myServo.write(thetaAng);
    


    
    digitalWrite(trigPin, LOW);
    delayMicroseconds(2);
    digitalWrite(trigPin, HIGH);
    delayMicroseconds(10);
    digitalWrite(trigPin, LOW);
    duration = pulseIn(echoPin, HIGH);
    distance = (duration / 2) / 29.1;


    if (distance <= 30) {
      digitalWrite(led, HIGH);
      sound = 250;
    }
    else {
      digitalWrite(led, LOW);
    }
    if (distance < 25) {
      digitalWrite(led2, HIGH);
      sound = 260;
    }
    else {
      digitalWrite(led2, LOW);
    }
    if (distance < 20) {
      digitalWrite(led3, HIGH);
      sound = 270;
    }
    else {
      digitalWrite(led3, LOW);
    }
    if (distance < 15) {
      digitalWrite(led4, HIGH);
      sound = 280;
    }
    else {
      digitalWrite(led4, LOW);
    }
    if (distance < 10) {
      digitalWrite(led5, HIGH);
      sound = 290;
    }
    else {
      digitalWrite(led5, LOW);
    }
    if (distance < 5) {
      digitalWrite(led6, HIGH);
      sound = 300;
    }
    else {
      digitalWrite(led6, LOW);
    }

    if (distance > 30 || distance <= 0) {
      
      noTone(buzzer);
       Serial.print(thetaAng);
    Serial.print(",");
    Serial.print("Out of range.");
    }
    else {
      tone(buzzer, sound);
       Serial.print(thetaAng);
    Serial.print(",");
    Serial.print(distance);
    Serial.print(".");
    }
   
    previousMillis = currentMillis;

  }
}
